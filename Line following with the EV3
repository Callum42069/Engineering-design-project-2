#pragma config(Sensor, S2,     Gyro,           sensorEV3_Gyro)
#pragma config(Sensor, S3,     Color,          sensorEV3_Color)
#pragma config(Sensor, S4,     Ultrasonic,     sensorEV3_Ultrasonic)
#pragma config(Motor,  motorC,          Rightmotor,    tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorB,          Leftmotor,     tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorA,          Grippermotor,  tmotorEV3_Medium, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

int Low = 100; //creates a variable called low with the value of 100
int High = 0;	//creates a variable called high with the value of 0
int Average = 50;	//creates a variable called average with the value of 50

void Calibration()	//Calibration function
{
	displayBigTextLine(5, "Scanning...");	//prints to the EV3 screen the message scanning to tell the user the robot is running calibration
	setMotorSpeed(Leftmotor, -10);	//turns the motors so the EV3 spins and can detect the different light levels
	setMotorSpeed(Rightmotor, 10);
	time1[T1] = 0;	//creates a timer called t1 and sets the timer to 0
  while(time1[T1] < 5000)	//runs the calibration for 5 seconds
  {
    if (SensorValue[Color] > High) //if the colour value detected by the sensor is higher than 0
    {
      High = SensorValue[Color];	//the high variable is set to the value of the sensor
    }
    if (SensorValue[Color] < Low) //if the colour value detected by the sensor is less than 100
    {
      Low = SensorValue[Color]; //the low variable is set to the value of the sensor
    }
  }
  Average = (High - Low) / 2;	//average value of the sensor is calculated so the robot has a value of when the sensor is over black and white
  setMotorSpeed(Leftmotor, 0);	//stops the motors
	setMotorSpeed(Rightmotor, 0);
}

task main()
{
	Calibration();	//runs the calibration function
	while(1)	//runs forever
	{
		if(SensorValue(Color) < Average )	//if the current value from the sensor is less than the average the motor speeds are changed
		{	//this is for when the sensor is detecting more black than white
			setMotorSpeed(Leftmotor, 20);
			setMotorSpeed(Rightmotor, 25);
		}
		else if(SensorValue(Color) > Average ) //if the current value from the sensor is more than the average the motor speeds are changed
		{	//this is for when the sensor is detecting more black than white
			setMotorSpeed(Leftmotor, 25);
			setMotorSpeed(Rightmotor, 20);
		}
		else	//if no values are out of the not close to the average then the EV3 has gone off track
		{
			displayBigTextLine(5, "Im lost");	//prints message to screen to say its lost
			playSound(soundBlip);	//sounds an alarm
			setMotorSpeed(Leftmotor, -30);	//moves both motors backwards to drive backwards onto the track
			setMotorSpeed(Rightmotor, -30);
			delay(2000);	//drives backwards for 2 seconds
		}
	}
}
